/*
Runtime 14 ms Beats 84.22% 
Memory 7.8 MB Beats 47.66%
*/
class Solution {
public:
    string minWindow(string s, string t) {
        if(s.size() < t.size()) return "";
        if(s == t) return s;
        unordered_map<char,int>dict;
        for(char &i:t) {
            dict[i]++;
        }
        int n = s.size();
        int minLen = INT_MAX;
        int sPos = 0;
        int count = t.size();
        for(int left=0,right=0;right<n;right++) {
            if(dict[s[right]]-- > 0) count--;
            while(count == 0) {
                if(right-left+1 < minLen) {
                    minLen = right-left+1;
                    sPos = left;
                }
                if(dict[s[left++]]++ == 0) {
                    count++;
                }
            }
        }
        return (minLen == INT_MAX) ? "":s.substr(sPos,minLen);
    }
};
