/*
Runtime 50 ms Beats 81.69% 
Memory 7.7 MB Beats 79.63%
*/
class Solution {
public:
    bool isMatch(string s, string p) {
        int m = s.size();
        int n = p.size();
        vector<vector<bool>> dp(m+1,vector<bool>(n+1,false));
        for(int i=0;i<=m;i++) {
            for(int j=0;j<=n;j++) {
                if(i == 0 and j == 0) dp[i][j] = 1;
                else if(j == 0) dp[i][j] = 0;
                else if(i == 0) {
                    if(p[j-1] == '*') dp[i][j] = dp[i][j-1];
                    else dp[i][j] = 0;
                } else {
                    if(p[j-1] == '*') {
                        dp[i][j] = dp[i][j-1] or dp[i-1][j];
                    } else {
                        dp[i][j] = dp[i-1][j-1] 
                        and (s[i-1] == p[j-1] or p[j-1] == '?');
                    }
                }
            }
        }
        return dp[m][n];
    }
};
