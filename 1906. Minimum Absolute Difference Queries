/*
Runtime 1023 ms Beats 61.18% 
Memory 91.7 MB Beats 69.41%
*/
class Solution {
public:
    vector<int> minDifference(vector<int>& nums, vector<vector<int>>& queries) {
        int n = nums.size();
        vector<int> res;
        vector<vector<int> > mp(101);
        for(int i = 0; i < n; i++) {
            mp[nums[i]].push_back(i);
        }
        for(auto q : queries) {
            int ans = INT_MAX, prev = -1;
            for(int i = 1; i <= 100; i++) {
                // find each number's lower bound
                // if not, will be continue;
                auto it = lower_bound(mp[i].begin(), mp[i].end(), q[0]);
                if(it == mp[i].end() || *it > q[1]) continue;
                if(prev != -1) ans = min(ans, i-prev);
                prev = i;
            }
            res.push_back(ans == INT_MAX ? -1 : ans);
        }
        return res;
    }
};
