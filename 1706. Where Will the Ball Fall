/*
Runtime: 28 ms, faster than 87.76% of C++ online submissions for Where Will the Ball Fall.
Memory Usage: 13.2 MB, less than 51.65% of C++ online submissions for Where Will the Ball Fall.
*/
class Solution {
public:
    int dfs (vector<vector<int>>& grid,int i,int j) {
        if(i == grid.size()) return j;
        if(grid[i][j] == 1 and j+1 < grid[0].size() and grid[i][j+1] == 1) {
            return dfs(grid,i+1,j+1);
        }
        if(grid[i][j] == -1 and j-1 >= 0 and grid[i][j-1] == -1) {
            return dfs(grid,i+1,j-1);
        }
        return -1;
    }
    vector<int> findBall(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        vector<int> ans(n,-1);
        for(int j=0;j<n;j++) {
            ans[j] = dfs(grid,0,j);
        }
        return ans;
    }
};
