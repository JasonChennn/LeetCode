/*
Runtime 14 ms Beats 91.95% 
Memory 20.6 MB Beats 11.2%
*/
class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        stack<pair<int,int>> stk;
        int sum = 0;
        for(int i=0;i<n;i++) {
            while(!stk.empty() and stk.top().first < height[i]) {
                pair<int,int> midTop = stk.top();
                stk.pop();
                if(stk.empty()) break;
                int w = i-stk.top().second-1;
                int h = 
                    min(height[i],stk.top().first) - midTop.first;
                sum += h*w;
            }
            stk.push({height[i],i});
        }
        return sum;
    }
};
