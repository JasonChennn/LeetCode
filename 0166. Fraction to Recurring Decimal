/*
Runtime 0 ms Beats 100% 
Memory 6.1 MB Beats 95.17%
*/
class Solution {
public:
    string fractionToDecimal(int numerator,int denominator) {
        string ans;
        unordered_map<int,int> mp;
        if((double)numerator/(double)denominator < 0) ans.push_back('-');
        long long num = numerator < 0 ? -(long long)numerator : numerator;
        long long denom = denominator < 0 ? -(long long)denominator : denominator;
        long long quot = num / denom;
        long long remain = num % denom;
        ans += to_string(quot);
        if(remain == 0) return ans;
        ans.push_back('.');
        int pos = ans.size();
        mp[remain] = pos++;
        while(remain != 0) {
            num = remain*10;
            quot = num / denom;
            remain = num % denom;
            ans.push_back(quot+'0');
            if(mp.find(remain) != mp.end()) {
                ans.insert(mp[remain],1,'(');
                ans.push_back(')');
                return ans;
            }
            mp[remain] = pos++;
        }
        return ans;
    }
};
