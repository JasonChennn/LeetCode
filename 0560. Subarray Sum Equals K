/*
Runtime 78 ms Beats 98.46% 
Memory 41.5 MB Beats 83.77%
*/
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int,int> mp;
        mp[0] = 1;
        int sum = 0;
        int count = 0;
        for(int i=0;i<n;i++) {
            sum += nums[i];
            int find = sum - k;
            if(mp.find(find) != mp.end()) {
                count += mp[find];
            }
            mp[sum]++;
        }
        return count;
    }
};
