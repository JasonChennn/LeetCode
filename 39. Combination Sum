/*
Runtime 27 ms Beats 33.43% 
Memory 15.9 MB Beats 33.81%
*/
class Solution {
public:
    vector<vector<int>> ans;
    void rec (vector<int>& candidates, int target, int i,vector<int> temp) {
        int sum = accumulate(temp.begin(),temp.end(),0);
        if(sum > target) {
            return;
        }
        if(sum == target) {
            ans.push_back(temp);
            return;
        }
        for(int j=i;j<candidates.size();j++) {
            temp.push_back(candidates[j]);
            rec(candidates,target,j,temp);
            temp.pop_back();
        }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        rec(candidates,target,0,{});
        return ans;
    }
};
