class Solution {
public:
    // n 代表至少要休息的次數
    int leastInterval(vector<char>& tasks, int n) {
        unordered_map<char,int> mp;
        int count = 0;
        for(int i=0;i<tasks.size();i++) {
            mp[tasks[i]]++;
            count = max(count,mp[tasks[i]]);
        }
        int ans = (count-1)*(n+1);
        for(auto &i:mp) {
            if(i.second == count) ans++; // 若有次數一樣，則idle要加1
        }
        return max((int)tasks.size(),ans);
    }
};
