/*
Runtime 15 ms Beats 85.32% 
Memory 9.9 MB Beats 94.18%
*/
class Solution {
public:
    void rec(vector<vector<char>>& board,int i,int j) {
        int m = board.size();
        int n = board[0].size();
        if(i<0 or j<0 or i>=m or j>=n or board[i][j] != 'O') return;
        board[i][j] = '*';
        rec(board,i+1,j);
        rec(board,i-1,j);
        rec(board,i,j+1);
        rec(board,i,j-1);
    }
    void solve(vector<vector<char>>& board) {
        int m = board.size();
        int n = board[0].size();
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                if(i==0 or j==0 or i==m-1 or j==n-1) {
                    rec(board,i,j);
                }
            }
        }
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                if(board[i][j] == '*') {
                    board[i][j] = 'O';
                } else {
                    board[i][j] = 'X';
                }
            }
        }
    }
};
