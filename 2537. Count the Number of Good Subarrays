/*
Runtime 217 ms Beats 87.50% 
Memory 79.7 MB Beats 12.50%
*/
class Solution {
public:
    long long countGood(vector<int>& nums, int k) {
        long long ans = 0;
        int count = 0, n = nums.size();
        unordered_map<long long,long long> mp;
        for(int i=0,j=0; i<n; i++) {
            mp[nums[i]]++;
            if(mp[nums[i]] > 1) count += mp[nums[i]]  - 1;
            while(j <= i && count >= k) {
                ans += n - i;
                mp[nums[j]]--;
                if(mp[nums[j]] >= 1) count -= mp[nums[j]];
                j++;
            } 
        }
        return ans;
    }
};
