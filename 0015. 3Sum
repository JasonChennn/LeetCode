/*
Runtime 163 ms Beats 55.13%
Memory 23.9 MB Beats 64.4%
*/
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        int n = nums.size();
        for(int i=0;i<n-2;i++) {
            if(i>0 and nums[i] == nums[i-1]) {
                continue;
            }
            int l = i+1;
            int r = n-1;
            int target = -nums[i];
            while(l<r and l<n and r>=0) {
                if(nums[l]+nums[r] == target) {
                    ans.push_back({nums[i],nums[l],nums[r]});
                    while(l<r and nums[l] == nums[l+1]) { l++; }
                    l++;
                } else if(nums[l]+nums[r] > target) {
                    r--;
                } else {
                    l++;
                }
            }
        }
        return ans;
    }
};
