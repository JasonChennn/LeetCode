/*
Runtime 187 ms Beats 98.57% 
Memory 51.4 MB Beats 83.14%
*/
class Solution {
public:
    int numBusesToDestination(vector<vector<int>>& routes, int source, int target) {
        unordered_map<int,vector<int>> mp;
        unordered_set<int> st;
        queue<int> q;
        int n = routes.size();
        for(int i=0;i<routes.size();i++) {
            for(int j=0;j<routes[i].size();j++) {
                 mp[routes[i][j]].push_back(i);   
            }
        }
        int ans = 0;
        if(source == target) return ans;
        q.push(source);
        while(!q.empty()) {
            int n = q.size();
            ans++;
            for(int i=0;i<n;i++) {
                int stop = q.front();
                q.pop();
                for(auto& bus:mp[stop]) {
                    if(st.find(bus) != st.end()) {
                        continue;
                    }
                    st.insert(bus);
                    for(int nextStop:routes[bus]) {
                        if(nextStop == target) return ans;
                        q.push(nextStop);
                    }
                }
            }
        }
        return -1;
    }
};
