/*
Runtime 316 ms Beats 52.33% 
Memory 75.3 MB Beats 91.66%
*/
class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        stack<int> stk;
        int n = heights.size();
        int maxArea = 0;
        for(int i=0;i<=n;i++) {
            while(!stk.empty() and (i == n or heights[stk.top()] >= heights[i])) {
                int currTop = stk.top();
                stk.pop();
                int width = (stk.empty()) ? i:i-stk.top()-1;
                int height = heights[currTop];
                maxArea = max(maxArea,width*height);
            }
            stk.push(i);
        }
        return maxArea;
    }
};
