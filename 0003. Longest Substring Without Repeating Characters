/*
Runtime 24 ms Beats 53.94% 
Memory 8.4 MB Beats 63.49%
*/
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char,int> mp;
        int n = s.size();
        int maxLen = 0;
        for(int l=0,r=0;r<n;r++) {
            mp[s[r]]++;
            maxLen = (mp[s[r]] > 1) ? max(maxLen,r-l) : max(maxLen,r-l+1);
            if(mp[s[r]] > 1) {
                while(l<r and mp[s[r]] > 1) {
                    mp[s[l++]]--;
                }
            }
        }
        return maxLen;
    }
};
