/*
Runtime 0 ms Beats 100% 
Memory 7.1 MB Beats 95.56%
*/
class Solution {
public:
    vector<string> ans;
    void rec(string s,unordered_set<string>& dict,string sentence,int i) {
        if(i == s.size()) {
            sentence.pop_back();
            ans.push_back(sentence);
            return;
        }
        string word = "";
        for(int j=i;j<s.size();j++) {
            word.push_back(s[j]);
            if(dict.count(word)) {
                rec(s,dict,sentence+word+" ",j+1);
            }
        }
    }
    vector<string> wordBreak(string s, vector<string>& wordDict) {
        unordered_set<string> dict(wordDict.begin(),wordDict.end());
        rec(s,dict,"",0);
        return ans;
    }
};
