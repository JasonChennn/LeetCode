/*
Runtime 245 ms Beats 98.75% 
Memory 116.3 MB Beats 84.68%
*/
class Solution {
public:
    vector<vector<int>> onesMinusZeros(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        vector<int> r_vec(m);
        vector<int> c_vec(n);
        for(int i=0;i<m;i++) {
            int r_sum = 0;
            for(int j=0;j<n;j++) {
                r_sum = (grid[i][j] == 1) ? r_sum+1 : r_sum-1; 
            }
            r_vec[i] = r_sum;
        }
        for(int j=0;j<n;j++) {
            int c_sum = 0;
            for(int i=0;i<m;i++) {
                c_sum = (grid[i][j] == 1) ? c_sum+1 : c_sum-1; 
            }
            c_vec[j] = c_sum;
        }
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                grid[i][j] = r_vec[i] + c_vec[j];
            }
        }
        return grid;
    }
};
