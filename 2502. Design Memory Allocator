/*
Runtime 175 ms Beats 72.57% 
Memory 38.4 MB Beats 6.30%
*/
class Allocator {
public:
    vector<int> arr;
    unordered_map<int,vector<int>> mp;
    int N;
    Allocator(int n) {
        arr.resize(n);
        N = n;
    }
    int allocate(int size, int mID) {
        int idx = -1;
        int free = 0;
        for(int i=0;i<N;i++) {
            if(free == 0) {
                idx = i;
            }
            if(arr[i] == 0) {
                free++;
                if(free >= size) {
                    break;
                }
            } else {
                free = 0;
            }
        }
        if(free >= size) {
            for(int i=idx;i<idx+size;i++) {
                arr[i] = mID;
                mp[mID].push_back(i);
            }
        }
        return (free >= size) ? idx : -1;
    }
    int free(int mID) {
        int cnt = 0;
        for(auto i : mp[mID]) {
            arr[i] = 0;
            cnt++;
        }
        mp.erase(mID);
 
