/*
Runtime 28 ms Beats 73.71% 
Memory 25.9 MB Beats 78.81%
*/
class Solution {
public:
    TreeNode* rec(vector<int>& preorder,int& pIndex,vector<int>& inorder,int l,int r) {
        if(l>r) return NULL;
        int target = preorder[pIndex++];
        int pivot;
        for(pivot=l;pivot<=r;pivot++) {
            if(target == inorder[pivot]) {
                break;
            }
        }
        TreeNode* root = new TreeNode(target);
        root->left = rec(preorder,pIndex,inorder,l,pivot-1);
        root->right = rec(preorder,pIndex,inorder,pivot+1,r);
        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int pIndex = 0;
        return rec(preorder,pIndex,inorder,0,preorder.size()-1);
    }
};
