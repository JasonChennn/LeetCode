/*
Runtime 28 ms Beats 73.71% 
Memory 25.9 MB Beats 78.81%
*/
class Solution {
public:
    TreeNode* rec(vector<int>& preorder,vector<int>& inorder,int l,int r,int& index) {
        if(l > r) return NULL;
        int val = preorder[index];
        int pivot;
        index++;
        for(int i=l;i<=r;i++) {
            if(inorder[i] == val) {
                pivot = i;
                break;
            }
        }
        TreeNode* root = new TreeNode(val);
        root->left = rec(preorder,inorder,l,pivot-1,index);
        root->right = rec(preorder,inorder,pivot+1,r,index);
        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int index = 0;
        TreeNode* root = rec(preorder,inorder,0,preorder.size()-1,index);
        return root;
    }
};
